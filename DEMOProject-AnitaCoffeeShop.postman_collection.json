{
	"info": {
		"_postman_id": "69941706-f2cf-4e16-b5d4-e4f0a4816902",
		"name": "DEMOProject-AnitaCoffeeShop",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Prequitsite_QueryData_beforeTest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success query all record from resourceName=users : Status code=200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_101",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code=201: Success added 1 record with mandatory(M)-parameter in resourceName=users\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"firstName\": \"Patrick\",\r\n     \"lastName\": \"Mathew\",\r\n     \"Position\": \"Branch Manager\",\r\n     \"EmployeeID\": \"MA-002\",\r\n     \"DOB\": \"29-012-1989\",\r\n     \"id\": 21\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_102_duplicateAddRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR : Status Code = 500 || INTERNAL SERVER ERROR_Unsuccess due to data already existed || duplicated id record(s). Please verify resourceKey=ID before adding record(s)\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"firstName\": \"Patrick\",\r\n     \"lastName\": \"Mathew\",\r\n     \"Position\": \"Branch Manager\",\r\n     \"EmployeeID\": \"MA-002\",\r\n     \"DOB\": \"29-012-1989\",\r\n     \"id\": 21\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code = 200 || Success UPDATED All information inside data record for resourceName=users \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"firstName\": \"Alberto\",\r\n     \"lastName\": \"Johnson\",\r\n     \"Position\": \"CEO-Founder\",\r\n     \"EmployeeID\": \"MA-003\",\r\n     \"DOB\": \"31-05-1990\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"21"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_202",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code = 200 || Success UPDATED_some of detail inside data record for resourceName=users \", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n          \"Position\": \"Share-Holder\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"21"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_301",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE = 200: Success DELETE record with resourceKey provided\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"21"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_302_duplicateDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: err_msg = cannot deleted record, data NOT FOUND : Status code = 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									" "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"21"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SUCCESS: Status code = 200 --> Query record(s) found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "TestCase-users_402_queryDeletedRecord Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: STATUS CODE = 404 || err_msg Query NOT Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/users/21",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"users",
								"21"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "productCategories",
			"item": [
				{
					"name": "Prequitsite_QueryData_beforeTest Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success query all record from resourceName=productCategories : Status code=200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/productCategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_101",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success query all record from resourceName=productCategories : Status code = 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-11\",\r\n     \"groupProductName\": \"Cheese-Cheddar\",\r\n     \"id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_102-duplicateAddRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR : Status Code = 500 || INTERNAL SERVER ERROR_Unsuccess due to data already existed || duplicated id record(s). Please verify resourceKey=ID before adding record(s)\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-11\",\r\n     \"groupProductName\": \"Cheese-Cheddar\",\r\n     \"id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"EStatus code = 200 || Success UPDATED All information inside data record with specific resourceKey provided for resourceName=productCategories\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-13\",\r\n     \"groupProductName\": \"JapaneseFood\",\r\n     \"id\": 6\r\n }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_202",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code = 200 || Success UPDATED_some of detail inside data record for resourceName=productCategories\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n     \"groupProductName\": \"IndianFood\" \r\n     \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_301",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE = 200: Success DELETE record with specific resourceKey provided\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_302",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: err_msg = cannot deleted record, data NOT FOUND : Status code = 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SUCCESS: Status code = 200 --> Query record(s) found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "productCategories_402",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: STATUS CODE = 404 || err_msg Query NOT Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productCategories/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productCategories",
								"5"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "productLists",
			"item": [
				{
					"name": "Prequitsite_QueryData_beforeTest Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Success query all record from resourceName=productLists : Status code=200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/productLists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_101",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code=201: Success added 1 record with mandatory(M) parameters in resourceName=productLists\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-08\",\r\n     \"groupName\": \"KetoFood\",\r\n     \"groupList\": [\r\n     {\r\n          \"Coconut Keto-Bake(Bag)\": 500,\r\n          \"Keto-Boxset\": 200\r\n     } ],\r\n     \"id\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_102_duplicateAddRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR : Status Code = 500 || INTERNAL SERVER ERROR_Unsuccess due to data already existed || duplicated id record(s). Please verify resourceKey=ID before adding record(s)\", function () {\r",
									"    pm.response.to.have.status(500);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-08\",\r\n     \"groupName\": \"KetoFood\",\r\n     \"groupList\": [\r\n     {\r\n          \"Coconut Keto-Bake(Bag)\": 500,\r\n          \"Keto-Boxset\": 200\r\n     } ],\r\n     \"id\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_201",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code = 200 || Success UPDATED All information inside data record with specific resourceKey provided for resourceName=productLists\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-12\",\r\n     \"groupName\": \"ItalianFood\",\r\n     \"groupList\": [\r\n     {\r\n          \"Sphagetti(Side-dish)\": 88,\r\n          \"Cesar-Salad\": 100\r\n     } ],\r\n     \"id\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_202",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code = 200 || Success UPDATED All information inside data record with specific resourceKey provided for resourceName=productLists\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n     \"productID\": \"P-12\",\r\n     \"groupName\": \"ItalianFood\",\r\n     \"groupList\": [\r\n     {\r\n          \"[Suggested Menu]PeaChick_Salad(Side-dish)\": 300\r\n     } ],\r\n     \"id\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_301",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"STATUS CODE = 200: Success DELETE record with specific resourceKey provided\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_302_duplicateDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: err_msg = cannot deleted record, data NOT FOUND : Status code = 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"SUCCESS: Status code = 200 --> Query record(s) found\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists"
							]
						}
					},
					"response": []
				},
				{
					"name": "productLists_402_queryDeleteRecord",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"ERROR: STATUS CODE = 404 || err_msg Query NOT Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/productLists/8",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"productLists",
								"8"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}